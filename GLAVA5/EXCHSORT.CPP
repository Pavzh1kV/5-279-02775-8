/* **************************************************** */
/*   ОБМЕННАЯ СОРТИРОВКА [37 - Топп,с.86]  */
/* Недостаток метода - сортировка не прекращается, когда
	массив уже упорядочен */
/* ************************************************* */
/* Хусаинов Б.С. 18.02.02  c:\bc\xbs\sort\chngSort.c */
#include <stdio.h>
#include <locale.h>
#include <stdlib.h>
//#include <conio.h>
#define n 8
int A[n] = { 27, 412, 71, 81, 59, 14, 273, 87 };

/*int A[n] ={1,2,3,4,5,6,7,8};*/
/* =================================================== */
int main()
{
    setlocale(LC_ALL,"Russian");
    void ChngSort(int A[], int nn);
    int j;
    printf("\n Обменная сортировка ");
    printf("\n  Исходный массив \n");
    for (j = 0; j < n; j++)
        printf("\t%d", A[j]);
    printf("\n");
    ChngSort(A, n);
    printf("\n  Отсортированный  массив \n");
    for (j = 0; j < n; j++)
        printf("\t%d", A[j]);
    printf("\n");
    getchar();
    return 0;
}

/* =========================================== */
/*  ФУНКЦИЯ ОБМЕННОЙ СОРТИРОВКИ  */
void ChngSort(int A[], int nn)
{
    int i, j, k, p;
    printf
    ("\n Отладочная печать по шагам сортировки");
    for (i = 0; i < nn - 1; i++)
    {
        for (j = i + 1; j < nn; j++)
            if (A[i] > A[j])
            {
                k = A[j];
                A[j] = A[i];
                A[i] = k;
            }
        printf(" \ni = %d", i);
        for (j = 0; j < nn; j++)
            printf("\t %d", A[j]);
    }
}

/* ****************************************************** */
