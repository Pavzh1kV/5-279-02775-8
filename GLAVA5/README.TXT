/* **************************************************************** */
/* readme.txt - о программах к главе 5, каталог GLAVA5              */
/* ================================================================ */
/*   analiz03.cpp - сравнение сложности алгоритмов сортировки       */
/* по времени упорядочения одного и того же массива из 15000        */
/* случайных чисел (большее число не позволяет ВС). Результаты      */
/* измерений времени сведены в таблицу, файл analiz.txt.            */
/* ================================================================ */
/*    analiz.txt - результаты измерений времени сортировки          */
/*  прямыми и улучшенными методами.                                 */
/*  Из прямых методов по степени увеличения времени сортировки идут:*/
/*  - метод прямого включения;                                      */
/*  - метод прямой выборки (примерно в 1,5 раза больше);            */
/*  - метод пузырька (больше чем в 4 раза);                         */
/*  - шейкерная сортировка (примерно в 3 раза больше, но лучше      */
/*	 метода пузырька;                                                */
/*  - Обменная сортировка по Топпу (примерно в 3 раза больше,       */
/*	 чуть лучше метода пузырька, но хуже шейкерной).                 */
/* Измерения по улучшенным методам сортировки проводились на тех же */
/* массивах, но с 100-кратным повторением. Эти методы сортировки    */
/* имеют результаты, примерно в 100 раз лучшие, чем прямые методы.  */
/* Наилучшие результаты имеет быстрая сортировка Хоара, затем       */
/* сортировка пирамидой (примерно в 1,5 раза хуже), наконец, метод  */
/* Шелла (примерно в 2 раза хуже).                                  */
/* ================================================================ */
	  /* Прямые методы сортировки */
/*   bblsort.cpp - сортировка методом пузырька.                 */
/*   shkrsort.cpp - шейкерная сортировка                        */
/*   sis.cpp - сортировка методом прямого включения.            */
/*   binins.cpp - сортировка методом прямого включения          */
/*  с делением пополам.                                         */
/*   binins23.cpp - сортировка массива случайных чисел          */
/*   strsel.cpp - сортировка методом прямого выбора             */
/*   exchsort.cpp - обменная сортировка по Топпу                */
/* ============================================================ */
	  /* Улучшенные методы сортировки */
/*   shell.cpp - сортировка методом Шелла                       */
/*   heapsort.cpp - сортировка пирамидой, вариант 1             */
/*   hpsrt.cpp - сортировка пирамидой, вариант 2                */
/*   rvrhpsrt.cpp - сортировка пирамидой по убыванию            */
/*   quicksrt.cpp - быстрая сортировка Хоара, рекурсия          */
/*   nrqksort.cpp - быстрая сортировка Хоара без рекурсии       */
/*   quicsrt1.cpp - показ неустойчивости быстрой сортировки     */
/* ============================================================ */
	  /* Методы внешней сортировки */
/*   vsort14.cpp - двухфазная сортировка файла прямым слиянием  */
/*   vsort18.cpp - однофазная сортировка файла прямым слиянием, */
/*  рекурсивная функция, 4 вспомогательных файла                */
/*  vsort21.cpp - однофазная сортировка файла прямым слиянием,  */
/*  нерекурсивная функция, 3 вспомогательных файла              */
/*   vnsort26.cpp - двухфазная сортировка файла естественным    */
/*  слиянием                                                    */
/* ============================================================ */
	  /* Применение методов сортировки */
/*   sortsum1.cpp - сортировка строк массива по суммам их эле-  */
/*  ментов методом пузырька. Строки массива переставляются в    */
/*  соответствии с суммами                                      */
/*   sortsum.cpp - псевдосортировка массива по суммам строк с   */
/*  использованием массива индексов строк. Строки массива не    */
/*  переставляются                                              */
/*   sortarrs.cpp - объединение двух массивов и сортировка:     */
/*  а) сортировка в ходе объединения;                           */
/*  б) объединение, затем сортировка                            */
/*   crt_stbl.cpp, crt_tb16.cpp - создание упорядоченной        */
/*  таблицы записей в динамической памяти, варианты получения   */
/*  памяти. Ключ записи - символьная строка                     */
/*   sorttbl.cpp - создание неупорядоченного файла с записями   */
/*  о служащих, чтение, сортировка. Ключ записи - символьная    */
/*  строка                                                      */
/*   srtblkey.cpp - то же, что и sorttbl.cpp, но имеется воз-   */
/*  можность сортировать массив записей по любому символьному   */
/*  полю записи                                                 */
/* ===========================================================  */
/*  incl_srt.cpp - файл включения с функциями внутренней        */
/*  сортировки                                                  */
/*  rand1.cpp - генератор случайных чисел в интервале [0...1],  */
/*  при одном обращении к функции вырабатывает заданное количе- */
/*  ство случайных чисел                                        */
/*  rand2.cpp - то же, но вырабатывает одно случайное число     */
/*  за одно обращение к функции                                 */
/* ============================================================ */
/*   sortdin.cpp, sortdin1.cpp - сортировка динамического       */
/* свободного массива символьных строк                          */
/* ============================================================ */
/*   sortstr.cpp - сортировка массива символьных строк, пред-   */
/* ставленного в виде двухмерного массива символов              */
/* ============================================================ */
/*  srtdnstr.cpp - сортировка динамического массива структур                         */
/* ============================================================  */
/*  srtstrct.cpp - сортировка массива структур                                                          */ 
/* ************************************************************ */
