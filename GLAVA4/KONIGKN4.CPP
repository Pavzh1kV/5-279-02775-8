/* *********************************************************** */
/* Обход конем шахматной доски. \konigkn4.cpp */
#include <stdio.h>
#include <locale.h>
//#include <conio.h>
int a[8] = { 2, 2, -2, -2, 1, 1, -1, -1 };	/* возможные перемещения коня */
int b[8] = { 1, -1, 1, -1, 2, -2, 2, -2 };	/* относительно текущего поля */

int M[20][20];			/* число возможных переходов */
int h[20][20];			/* шахматная доска */
int cnt1 = 0, cnt2 = 0;		/* счетчики для определения сложности задачи */
int x, y;			/* координаты клетки доски */
int size;			/* размер стороны доски - от 5 до 20 */
int order = 1;			/* номер хода, при котором конь попадает в (x,y) */
/* ================================================================== */
/* ПЕЧАТЬ  ДОСКИ */
void printh()
{
    int i, j;
    for (i = 0; i < size; i++)
    {
        for (j = 0; j < size; j++)
            printf("%4d ", h[i][j]);
        if (size < 20)
            printf("\n");
    }
}

/* ============================================= */
/* ПЕЧАТЬ МАТРИЦЫ ЧИСЛА ПЕРЕХОДОВ */
void printm()
{
    int i, j;
    for (i = 0; i < size; i++)
    {
        for (j = 0; j < size; j++)
            printf("%4d ", M[i][j]);
        if (size < 20)
            printf("\n");
    }
}

/* ===================================================== */
/* ШАГ КОНЯ НА СЛЕДУЮЩУЮ КЛЕТКУ ДОСКИ */
void go_next()
{
    int k, xn, yn;
    int min = -1;
    for (k = 0; k <= 7; k++)
    {
        xn = x + a[k];
        yn = y + b[k];
        cnt2++;

        /* Не вышли ли за пределы доски? */
        if ((xn < 0) || (xn >= size) || (yn < 0) || (yn >= size))
            continue;

        /* Определим поле с минимальным числом переходов */
        if (((M[xn][yn] < M[x + a[min]][y + b[min]]) || (min == -1)) &&
                (M[xn][yn] != 0) && (h[xn][yn] == 0))
            min = k;
        cnt1++;
    }

    /* Переход на это поле */
    x += a[min];
    y += b[min];
    h[x][y] = ++order;

    /* Можно проследить за процессом решения задачи */
    /*     printf("\n ход=%d  cnt1=%d\n",order,cnt1);
       printm();getchar();
       printh();getchar();
     */
}

/* ====================================================== */
/* УСТАНОВКА МАТРИЦЫ ЧИСЛА ПЕРЕХОДОВ */
void setnmb()
{
    int i, j, in, jn, k;
    for (i = 0; i < size; i++)
        for (j = 0; j < size; j++)
        {
            M[i][j] = 0;
            if (!h[i][j])
                for (k = 0; k <= 7; k++)
                {
                    in = i + a[k];
                    jn = j + b[k];
                    cnt2++;
                    if ((in < 0) || (in >= size) || (jn < 0)
                            || (jn >= size))
                        continue;
                    if ((h[in][jn] == 0) || (h[in][jn] == order))
                        M[i][j]++;
                    cnt1++;
                }
        }
}

/* ========================================================= */
/* ОБХОД КОНЕМ ШАХМАТНОЙ ДОСКИ */
void start()
{
    do
    {
        setnmb();
        go_next();
    }
    while (order < size * size);
}

/* ==========================================================*/
main()
{
    setlocale(LC_ALL,"Russian");
    system("clear");
    printf
    ("Обход конем шахматной доски размером от 5*5 до 20*20 клеток\n");
    while (1)
    {
        printf
        ("Введите размерность шахматного поля (от 5 до 20) => ");
        scanf("%d", &size);
        if ((size > 20) || (size < 5))
        {
            printf("\n Ошибка в размере поля");
            continue;
        }
        else
            break;
    }
    while (1)
    {
        printf
        ("\nВведите координаты нач. клетки\nСтрока => ");
        scanf("%d", &x);
        printf("Столбец => ");
        scanf("%d", &y);
        x--;
        y--;
        if ((x < size) && (x >= 0) && (y < size) && (y >= 0))
        {
            h[x][y] = 1;
            break;
        }
        else
            printf("\n Ошибка в координатах поля");
    }
    start();
    if (size == 20)
        textmode(64);
    printf("\nПорядок обхода имеет вид:\n");
    printh();
    printf("cnt1=%d cnt2=%d", cnt1, cnt2);
    printf("\n Конец задачи ");
    getchar();
    return 0;
}

/* ********************************************************* */
