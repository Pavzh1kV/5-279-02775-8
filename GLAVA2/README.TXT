/* ******************************************************* */
/* readme.txt    О программах к главе2, каталог GLAVA2     */
/* ======================================================= */
/*   dquegl.cpp - работа с кольцевой очередью в векторной  */
/*  памяти, использует файл включения incl_que.cpp         */
/* ======================================================= */
/*   incl_que.cpp - файл включения, содержит дескриптор    */
/*  и функции, обеспечивающие работу с кольцевой очередью  */
/* ======================================================= */
/*   dstakg2.cpp - работа со стеком в векторной памяти,    */
/*  использует файл включения incl_stc.c                   */
/* ======================================================= */
/*   incl_stc.c - файл включения, содержит дескриптор и    */
/*  функции, обеспечивающие работу со стеком               */
/* ======================================================= */
/*   N10_n.cpp - пример использования стека. Вывод десятич-*/
/* ного числа в виде числа с другим основанием В (2<=B<=9),*/
/*  используется файл включения incl_stc.c                 */
/* ======================================================= */
/*   postfx15.cpp - пример использования стека. Постфиксный*/
/*  калькулятор. Вычисление значения арифметического выра- */
/*  жения, заданного в постфиксной форме (обратной польской*/
/*  записи ).                                              */
/* ======================================================= */
/*   inf_pstfx.cpp - пример использования стека. Преобра-  */
/*	зование арифметического выражения в постфиксную форму   */
/*	(обратную польскую запись)                              */
/* ======================================================= */
/*   infxcalc.cpp - пример использования двух стеков.      */
/*  Инфиксный калькулятор. Вычисление значения арифметичес-*/
/*  кого выражения, заданного в обычной форме (в стиле Си).*/
/* ======================================================= */
/*   fspisok.cpp - работа с одним линейным упорядоченным   */
/*  списком. Для доступа к списку используется просто ука- */
/*  затель на начало списка (указатель на элемент списка)  */
/* ======================================================= */
/*   dspisok.cpp - работа с одним списком, для управления  */
/*  списком используется дескриптор списка.                */
/* ======================================================= */
/*   list303.cpp - работа с тремя линейными упорядоченными */
/*  списками                                               */
/* ======================================================= */
/*   Пример использования очереди смотри также в каталоге  */
/*  GLAVA3, программа alltree9.cpp, функция lvlorder(...) -*/
/*  обход бинарного дерева по уровням.                     */
/* ******************************************************* */
